name: Api
on:
  push:
    branches:
      - main
    paths:
      - 'packages/api/**'
      - '.github/workflows/api.yml'
  pull_request:
    types:
      - opened
      # Triggered when a pull request's head branch is updated.
      # For example, when the head branch is updated from the base branch, when new commits are pushed to the head branch, or when the base branch is changed.
      - synchronize

    paths:
      - 'packages/api/**'
      - '.github/workflows/api.yml'
jobs:
  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 22
      # Only install the deps directly listed... dont do workspace magic.
      # Running install from the root gets you all the deps for all the packages.
      # which can easily mask missing deps if another modules also depends on it.
      - uses: bahmutov/npm-install@v1
      - run: npm run lint --workspace packages/api
      - run: npm run build --workspace packages/api
      - run: npm test --workspace packages/api

  deploy-staging:
    name: Deploy Staging API
    # When there's a push to 'main', deploy it to staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 22
      - uses: bahmutov/npm-install@v1
      - name: Publish api worker
        uses: cloudflare/wrangler-action@v3
        env:
          ENV: 'staging' # inform the build process what the env is
          SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN}}
          SENTRY_UPLOAD: ${{ secrets.SENTRY_UPLOAD}}
        with:
          apiToken: ${{ secrets.CF_TOKEN }}
          workingDirectory: 'packages/api'
          environment: 'staging'
      - name: Test publish a record to staging
        run: |
          npm run build -w packages/client
          ./packages/client/bin/do-staging-test-publish.mjs

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: googleapis/release-please-action@v4
        id: tag-release
        with:
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json
      - uses: actions/checkout@v2
        if: ${{ fromJson(steps.tag-release.outputs.releases_created) }}
      - uses: actions/setup-node@v2
        if: ${{ fromJson(steps.tag-release.outputs.releases_created) }}
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/
      - uses: bahmutov/npm-install@v1
        if: ${{ fromJson(steps.tag-release.outputs.releases_created) }}
      # --- API deploy steps -------------------------------------------------
      - name: API - Deploy to Cloudflare
        if: ${{ fromJson(steps.tag-release.outputs.releases_created) }}
        uses: cloudflare/wrangler-action@v3
        env:
          ENV: 'production' # inform the build process what the env is
          SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_UPLOAD: ${{ secrets.SENTRY_UPLOAD }}
        with:
          apiToken: ${{ secrets.CF_TOKEN }}
          workingDirectory: 'packages/api'
          environment: 'production'
